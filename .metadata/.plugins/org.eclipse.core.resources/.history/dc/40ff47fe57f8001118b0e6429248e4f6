package edu.uw.cs.cse461.OSConsoleApps;

import java.io.BufferedReader;
import java.io.InputStreamReader;

import org.json.JSONObject;

import edu.uw.cs.cse461.NetBase.NetLoadableInterface.NetLoadableApp;
import edu.uw.cs.cse461.OS.RPC.RPCCallerSocket;

public class Ping implements NetLoadableApp {
	
	// OSConsoleApp's must have a constructor taking no arguments
	public Ping() {
	}
	
	public String loadablename() {
		return "ping";
	}
	
	public void run() {
		try {
			// Eclipse doesn't support System.console()
			BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
			System.out.println("Enter lines like <target> <msg> to have <msg> echoed back");
			while ( true ) {
				RPCCallerSocket socket = null;
				try {
					System.out.print("Enter a host ip, or exit to exit: ");
					String targetIP = console.readLine();
					if ( targetIP == null ) targetIP = "";
					else if ( targetIP.equals("exit")) break;

					System.out.print("Enter the RPC port, or empty line to exit: ");
					String targetPortStr = console.readLine();
					if ( targetPortStr == null || targetPortStr.isEmpty() ) continue;
					int targetPort = Integer.parseInt(targetPortStr);
					

    				socket = new RPCCallerSocket(targetIP, targetIP, targetPort);
    				long mStartTime = System.nanoTime();
    				JSONObject result = socket.invoke("echo", "echo", new JSONObject().put("msg", 0));
    				long mStopTime = System.nanoTime();
    				System.out.println(((mStopTime-mStartTime)/1000000.0) + " msec.");
					
				} catch (Exception e) {
					System.out.println("Exception: " + e.getMessage());
				}
//				finally {
//					if ( socket != null ) socket.close();
//				}
			}
		} catch (Exception e) {
			System.out.println("EchoConsole.run() caught exception: " +e.getMessage());
		}
	}
	
	public void shutdown() {
	}
	
}
