package edu.uw.cs.cse461.sp12.OS;

import java.io.IOException;
import java.util.Properties;

import edu.uw.cs.cse461.sp12.OS.NameManagerBase.RecordSet;
import edu.uw.cs.cse461.sp12.util.Log;
import edu.uw.cs.cse461.sp12.util.NanoHTTPD;

public class DDNSServiceHTTPD extends NanoHTTPD {
	private static final String TAG="DDNSServiceHTTPD";
	
	public DDNSServiceHTTPD( int port ) throws IOException {
		super(port, null); // don't want to serve files, ever (?)
		
		Log.e(TAG, "Created at port " + localPort());
	}

	@Override
	public Response serve( String uri, String method, Properties header, Properties parms, Properties files ) {
		try {
			NameManager manager = new NameManager();
			
			Log.e(TAG,  "method = '" + method + "'  uri=" + uri);
			
			if ( !uri.toLowerCase().equals("/ddns") || !method.toLowerCase().equals("get") )
				return new Response( HTTP_NOTFOUND, MIME_HTML, HTTP_NOTFOUND);
			
			String hostname = OS.hostname();
			if ( hostname.isEmpty() ) hostname="root";
			
			StringBuilder sb = new StringBuilder("Host: ").append(hostname).append("\n");
			sb.append(manager.toString());
			sb.append("\n");
			
			return new Response( HTTP_OK, MIME_PLAINTEXT, sb.toString() );
			
		} catch (Exception e) {
			return new Response( HTTP_INTERNALERROR, MIME_HTML, HTTP_INTERNALERROR + "<p><pre>" + e.getMessage() + "</pre>");
		}
	}


}
