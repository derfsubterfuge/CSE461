package edu.uw.cs.cse461.OSConsoleApps;

import java.io.BufferedReader;
import java.io.InputStreamReader;

import org.json.JSONObject;

import edu.uw.cs.cse461.OS.OSLoadableInterface.OSLoadableApp;
import edu.uw.cs.cse461.OS.RPC.RPCCallerSocket;

public class Echo implements OSLoadableApp {
	
	// OSConsoleApp's must have a constructor taking no arguments
	public Echo() {
	}
	
	public String loadablename() {
		return "echo";
	}
	
	public void run() {
		try {
			// Eclipse doesn't support System.console()
			BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
			System.out.println("Enter lines like <target> <msg> to have <msg> echoed back");
			while ( true ) {
				RPCCallerSocket socket = null;
				try {
					System.out.print("Enter a host ip, or exit to exit: ");
					String targetIP = console.readLine();
					if ( targetIP == null ) targetIP = "";
					else if ( targetIP.equals("exit")) break;

					System.out.print("Enter the RPC port, or empty line to exit: ");
					String targetPortStr = console.readLine();
					if ( targetPortStr == null || targetPortStr.isEmpty() ) continue;
					int targetPort = Integer.parseInt(targetPortStr);
					

					System.out.print("Enter message to be echoed: ");
					String msg = console.readLine();
					
					socket = new RPCCallerSocket(targetIP, targetIP, targetPort);
					JSONObject response = socket.invoke("echo", "echo", new JSONObject().put("msg", msg) );
					
					if ( response.has("msg") ) System.out.println(response.getString("msg"));
					else System.out.println("No msg returned!?  (No msg sent?)");
					
				} catch (Exception e) {
					System.out.println("Exception: " + e.getMessage());
				} 
//				finally {
//					if ( socket != null ) socket.close();
//				}
			}
		} catch (Exception e) {
			System.out.println("EchoConsole.run() caught exception: " +e.getMessage());
		}
	}
	
	public void shutdown() {
	}
	
}
