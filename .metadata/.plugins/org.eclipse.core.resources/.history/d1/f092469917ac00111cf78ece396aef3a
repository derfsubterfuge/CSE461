package edu.uw.cs.cse461.sp12.SNet;

import java.io.File;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.Toast;
import edu.uw.cs.cse461.sp12.DB461.DB461.DB461Exception;
import edu.uw.cs.cse461.sp12.OS.DDNSFullName;
import edu.uw.cs.cse461.sp12.OS.OS;

public class ContactActivity extends Activity {
	private static final String TAG="ContactActivity";

	private File mGalleryDir;
	private DDNSFullName mMyName;
	private String mDBDir;
	private SNetController mSNetController;
	

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.contact);

        mGalleryDir = new File(getIntent().getStringExtra("gallerypath"));
        mDBDir = getIntent().getStringExtra("snetdbdir");
		mSNetController = new SNetController(mDBDir);


		mMyName = new DDNSFullName(OS.hostname());
		try {
			mSNetController.registerBaseUsers(mMyName);
		} catch (DB461Exception e) {
			Log.e(TAG, "registerBaseUsers failed: " + e.getMessage());
		}
		
		Spinner memberSpinner = (Spinner)findViewById(R.id.memberspinner);
		ArrayAdapter<CharSequence> memberList = new ArrayAdapter(this, android.R.layout.simple_spinner_item);

		DDNSFullName[] allMembers = mSNetController.getAllMembers();
		for ( DDNSFullName m : allMembers ) {
			String member = m.toString();
			if ( member.equals("")) member = "root";
			memberList.add(member);
		}
		
	    memberList.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	    memberSpinner.setAdapter(memberList);
		
		memberSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
			public void onItemSelected(AdapterView<?> parent, View view, int pos, long id) {
			     Toast.makeText(parent.getContext(), "The planet is " +
			             parent.getItemAtPosition(pos).toString(), Toast.LENGTH_LONG).show();
			}
			public void onNothingSelected(AdapterView parent) {
				
			}
		});
				
	}
	
	private String readSpinner() {
		Spinner memberSpinner = (Spinner)findViewById(R.id.memberspinner);
		String m = memberSpinner.getSelectedItem().toString();
		if ( m.equals("root")) m = "";
		return m;
	}
	
	public void onContact(View b) {
		new Thread() {
			public void run() {
				String ddnsname = readSpinner();
				if ( ddnsname == null ) return;
				try {
					mSNetController.fetchUpdates(ddnsname, mGalleryDir);
            		// May have received new photos. Try to update gallery viewer
            		sendBroadcast(new Intent(
            			    Intent.ACTION_MEDIA_MOUNTED,
            			    Uri.parse("file://" + Environment.getExternalStorageDirectory())));            		
				} catch (DB461Exception e) {
					Log.e(TAG, "onContact failed: " + e.getMessage());
				}
			}
		}.start();
	}
	
	public void onFriend(View b) {
		String ddnsname = readSpinner();
		if ( ddnsname == null ) return;
		try {
			mSNetController.setFriend(new DDNSFullName(ddnsname), true);
		} catch (DB461Exception e) {
			Log.e(TAG, "onFriend failed: " + e.getMessage());
		}
	}
	
	public void onUnfriend(View b) {
		String ddnsname = readSpinner();
		if ( ddnsname == null ) return;
		try {
			mSNetController.setFriend(new DDNSFullName(ddnsname), false);
		} catch (DB461Exception e) {
			Log.e(TAG, "onUnfriend failed: " + e.getMessage());
		}
	}
	
	public void onFixDB(View b) {
		try {
			mSNetController.fixDB(mGalleryDir);		
    		// Try to update gallery viewer
    		sendBroadcast(new Intent(
    			    Intent.ACTION_MEDIA_MOUNTED,
    			    Uri.parse("file://" + Environment.getExternalStorageDirectory())));            		
		} catch (DB461Exception e) {
			Log.e(TAG, "onFixDB failed: " + e.getMessage());
		}
	}
}
