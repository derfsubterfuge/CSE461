package edu.uw.cs.cse461.sp12.OSConsoleApps;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Set;

import edu.uw.cs.cse461.sp12.OS.OS;
import edu.uw.cs.cse461.sp12.OS.OSConsoleApp;

/**
 * An AppManager acts someting like a shell on a traditional system - it lets
 * you run apps (OSConsoleApps).  Unlike traditional systems, but something
 * like Android, there is only one instance of an app created, no matter how
 * many times it's invoked.  In this system, all apps are loaded when the 
 * OS boots.  An app invocation is merely a call to its run() method.
 * The AppManager   
 * @author zahorjan
 *
 */
public class AppManager implements OSConsoleApp {
	private static final String TAG="AppManager";
	
	public String appname() { return "appmanager"; }

	public void shutdown() {
	}
	
	/**
	 * Constructor required by OSConsoleApp.
	 * 
	 * @param args String[] argument passed to main().
	 * @throws Exception
	 */
	public AppManager() throws Exception {
	}

	/**
	 * This method implements a very primitive shell.  Apps are "run in the foreground."
	 * @throws Exception
	 */
	public void run() throws Exception {
		// Eclipse doesn't support System.console()
		BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
		
		Set<String> apps = OS.loadedAppNames();
		String prompt = new String("Enter app name (");
		for ( String name : apps ) {
			if ( name.equals(appname()) ) continue;
			prompt += name + ", ";
		}
		prompt = prompt.substring(0, prompt.length()-2) + "), or exit: "; 

		while (true) {
			StringBuilder sb = new StringBuilder().append("Enter app name (");
			for ( String appname : mAppMap.keySet() ) {
				sb.append( appname + "  ");
			}
			sb.append("), or exit: ");
			System.out.print(sb.toString());
			String appName = console.readLine();

			if ( appName == null ) continue;
			if ( appName.equals("exit") ) break;

			OSConsoleApp app = mAppMap.get(appName);
			if ( app == null ) System.out.println("No such app: " + appName);
			else app.run();
		}
	}
}
